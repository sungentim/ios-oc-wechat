//
//  PrefixHeader.pch
//  iOS-oc-wechat
//
//  Created by winter on 16/1/30.
//  Copyright © 2016年 wangsen. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.

#endif /* PrefixHeader_pch */

#import "SWCrashReport.h"

#import "NSString+TXCategory.h"
#import "UIView+SWLayout.h"
#import "UIView+SWCategory.h"
#import "UIColor+SWCategory.h"
#import "UIImage+SWCategory.h"

#import "SWTableViewCell.h"
#import "SWTableView.h"
#import "SWBorderTableViewCell.h"
#import "SWBaseViewController.h"

#import <Masonry.h>


#define kkScreenSize   ([UIScreen mainScreen].bounds.size)
#define kkScreenWidth  (kkScreenSize.width)
#define kkScreenHeight (kkScreenSize.height)
#define kkScrreenRate (kkScreenWidth/320)

// 创建weak弱类型引用weakSelf   使用：kkWeakSelf(me) 后： me 即是 self的弱类型引用
#define kkWeakSelf(weakSelf)  __weak __typeof(&*self)weakSelf = self;


#pragma mark - NSLog打印判断测试和生产
/**
 *定义常用宏
 *NSLog
 *release模式通常会定义 __OPTIMIZE__，当然debug模式不会
 **/
// Debug模式下允许打印，Release模式打印函数无效
#ifndef __OPTIMIZE__ //测试
# define NSLog(...) NSLog(__VA_ARGS__)
# define NSLogE(FORMAT, ...) fprintf(stderr,"\nfunction:%s line:%d content:%s\n", __FUNCTION__, __LINE__, [[NSString stringWithFormat:FORMAT, ##__VA_ARGS__] UTF8String]);
#else // 生产
# define NSLog(...) {}
# define NSLogE(...) {}
#endif

#pragma mark - 生产测试包含头文件
#ifndef __OPTIMIZE__ //测试
#include "UIView+Debug.h"
#else //生产
#endif



# pragma - mark 严格单例
///// 严格单例
#if __has_feature(objc_arc)
#define kSWStrictSingletonForClass(__CLASS_NAME__) \
static __CLASS_NAME__ *shared##__CLASS_NAME__ = nil;\
+ (__CLASS_NAME__ *)shared##__CLASS_NAME__ {\
static dispatch_once_t onceToken;\
dispatch_once(&onceToken, ^{\
shared##__CLASS_NAME__ = [[super allocWithZone:NULL] init];\
});\
return shared##__CLASS_NAME__;\
}\
+ (id)allocWithZone:(NSZone *)zone {\
return [__CLASS_NAME__ shared##__CLASS_NAME__];\
}\
- (id)copyWithZone:(NSZone *)zone {\
return self;\
}
#else
#define kSWStrictSingletonForClass(__CLASS_NAME__) \
static __CLASS_NAME__ *shared##__CLASS_NAME__ = nil;\
+ (__CLASS_NAME__ *)shared##__CLASS_NAME__ {\
static dispatch_once_t onceToken;\
dispatch_once(&onceToken, ^{\
shared##__CLASS_NAME__ = [[super allocWithZone:NULL] init];\
});\
return shared##__CLASS_NAME__;\
}\
+ (id)allocWithZone:(NSZone *)zone {\
return [__CLASS_NAME__ shared##__CLASS_NAME__];\
}\
- (id)copyWithZone:(NSZone *)zone {\
return self;\
}\
- (id)retain {\
return self;\
}\
- (NSUInteger)retainCount {\
return NSUIntegerMax;\
}\
- (oneway void)release {\
}\
- (id)autorelease {\
return self;\
}
#endif
